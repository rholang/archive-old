"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var constants_1 = require("@atlaskit/theme/constants");
var colors_1 = require("@atlaskit/theme/colors");
var constants_2 = require("../constants");
var halfGridSize = constants_1.gridSize() / 2;
var progressBarHeight = constants_1.gridSize();
var labelTopSpacing = constants_1.gridSize() + 20; // Labels sit 20px from bottom of progress bar.
exports.ProgressTrackerStageContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  position: relative;\n  width: 100%;\n"], ["\n  position: relative;\n  width: 100%;\n"])));
exports.ProgressTrackerStageMarker = styled_components_1.default.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -", "px);\n  background-color: ", ";\n  height: ", "px;\n  width: ", "px;\n  border-radius: ", "px;\n\n  &.fade-appear {\n    opacity: 0.01;\n  }\n\n  &.fade-appear.fade-appear-active {\n    opacity: 1;\n    transition: opacity ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n\n  &.fade-enter {\n    background-color: ", ";\n  }\n\n  &.fade-enter.fade-enter-active {\n    background-color: ", ";\n    transition: background-color ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n"], ["\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -", "px);\n  background-color: ", ";\n  height: ", "px;\n  width: ", "px;\n  border-radius: ", "px;\n\n  &.fade-appear {\n    opacity: 0.01;\n  }\n\n  &.fade-appear.fade-appear-active {\n    opacity: 1;\n    transition: opacity ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n\n  &.fade-enter {\n    background-color: ", ";\n  }\n\n  &.fade-enter.fade-enter-active {\n    background-color: ", ";\n    transition: background-color ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n"])), labelTopSpacing, function (props) { return props.color; }, progressBarHeight, progressBarHeight, progressBarHeight, function (props) { return props.transitionSpeed; }, function (props) { return props.transitionEasing; }, function (props) { return props.transitionDelay; }, function (props) { return props.oldMarkerColor; }, function (props) { return props.color; }, function (props) { return props.transitionSpeed; }, function (props) { return props.transitionEasing; }, function (props) { return props.transitionDelay; });
exports.ProgressTrackerStageBar = styled_components_1.default.div(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["\n  position: absolute;\n  left: 50%;\n  transform: translate(0, -", "px);\n  background-color: ", ";\n  height: ", "px;\n  width: calc(\n    ", "% + ", " /\n      100 * ", "px\n  ); /* account for spacing and radius of marker */\n  border-top-right-radius: ", "px;\n  border-bottom-right-radius: ", "px;\n\n  &.fade-appear {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n  }\n\n  &.fade-appear.fade-appear-active {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n    transition: width ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n\n  &.fade-enter {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n  }\n\n  &.fade-enter.fade-enter-active {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n    transition: width ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n"], ["\n  position: absolute;\n  left: 50%;\n  transform: translate(0, -", "px);\n  background-color: ", ";\n  height: ", "px;\n  width: calc(\n    ", "% + ", " /\n      100 * ", "px\n  ); /* account for spacing and radius of marker */\n  border-top-right-radius: ", "px;\n  border-bottom-right-radius: ", "px;\n\n  &.fade-appear {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n  }\n\n  &.fade-appear.fade-appear-active {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n    transition: width ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n\n  &.fade-enter {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n  }\n\n  &.fade-enter.fade-enter-active {\n    width: calc(\n      ", "% +\n        ", " / 100 *\n        ", "px\n    ); /* account for spacing and radius of marker */\n    transition: width ", "ms\n      ", ";\n    transition-delay: ", "ms;\n  }\n"])), labelTopSpacing, colors_1.B300, progressBarHeight, function (props) { return props.percentageComplete; }, function (props) { return props.percentageComplete; }, function (props) { return halfGridSize + constants_2.spacing[props.theme.spacing]; }, constants_1.gridSize, constants_1.gridSize, function (props) { return props.oldPercentageComplete; }, function (props) { return props.oldPercentageComplete; }, function (props) { return halfGridSize + constants_2.spacing[props.theme.spacing]; }, function (props) { return props.percentageComplete; }, function (props) { return props.percentageComplete; }, function (props) { return halfGridSize + constants_2.spacing[props.theme.spacing]; }, function (props) { return props.transitionSpeed; }, function (props) { return props.transitionEasing; }, function (props) { return props.transitionDelay; }, function (props) { return props.oldPercentageComplete; }, function (props) { return props.oldPercentageComplete; }, function (props) { return halfGridSize + constants_2.spacing[props.theme.spacing]; }, function (props) { return props.percentageComplete; }, function (props) { return props.percentageComplete; }, function (props) { return halfGridSize + constants_2.spacing[props.theme.spacing]; }, function (props) { return props.transitionSpeed; }, function (props) { return props.transitionEasing; }, function (props) { return props.transitionDelay; });
exports.ProgressTrackerStageTitle = styled_components_1.default.div(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["\n  font-weight: ", ";\n  line-height: 16px;\n  color: ", ";\n  text-align: center;\n  font-size: ", "px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ", "px;\n\n  &.fade-appear {\n    opacity: 0.01;\n  }\n\n  &.fade-appear.fade-appear-active {\n    opacity: 1;\n    transition: opacity ", "ms\n      cubic-bezier(0.2, 0, 0, 1);\n  }\n"], ["\n  font-weight: ", ";\n  line-height: 16px;\n  color: ", ";\n  text-align: center;\n  font-size: ", "px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ", "px;\n\n  &.fade-appear {\n    opacity: 0.01;\n  }\n\n  &.fade-appear.fade-appear-active {\n    opacity: 1;\n    transition: opacity ", "ms\n      cubic-bezier(0.2, 0, 0, 1);\n  }\n"])), function (props) { return props.fontweight; }, function (props) { return props.color; }, constants_1.fontSize, labelTopSpacing, function (props) { return props.transitionSpeed; });
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=styled.js.map