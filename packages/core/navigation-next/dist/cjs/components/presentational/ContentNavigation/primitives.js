"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContainerNavigationMask = exports.ContentNavigationWrapper = exports.ContainerOverlay = exports.ContainerNavigation = exports.ContainerNavigationTheme = exports.ProductNavigation = exports.ProductNavigationTheme = exports.ScrollProviderRef = void 0;

var _core = require("@emotion/core");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _css2 = _interopRequireDefault(require("@emotion/css"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _colors = require("@atlaskit/theme/colors");

var _constants = require("../../../common/constants");

var _theme = require("../../../theme");

var _helpers = require("../../../common/helpers");

/**
 * Component tree structure
 *  - ProductNavigation
 *  - ContainerNavigation
 *    - ContainerOverlay
 */
var ScrollProviderRef = _react.default.createContext();

exports.ScrollProviderRef = ScrollProviderRef;

var ScrollProvider = function ScrollProvider(_ref) {
  var isVisible = _ref.isVisible,
      props = (0, _objectWithoutProperties2.default)(_ref, ["isVisible"]);

  var scrollProviderRef = _react.default.createRef();

  return (0, _core.jsx)(ScrollProviderRef.Provider, {
    value: scrollProviderRef
  }, (0, _core.jsx)("div", (0, _extends2.default)({
    css:
    /*#__PURE__*/
    (0, _css2.default)({
      boxSizing: 'border-box',
      display: isVisible ? 'flex' : 'none',
      flexDirection: 'column',
      height: '100%',
      overflowX: 'hidden',
      overflowY: 'auto',
      width: '100%'
    }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0NRIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */"),
    tabIndex: -1,
    role: "group",
    ref: scrollProviderRef
  }, props)));
};
/**
 * ProductNavigation
 */


var ProductNavigationPrimitiveBase = function ProductNavigationPrimitiveBase(_ref2) {
  var children = _ref2.children,
      isVisible = _ref2.isVisible,
      _ref2$theme = _ref2.theme,
      theme = _ref2$theme === void 0 ? {
    mode: _theme.light,
    context: 'product'
  } : _ref2$theme;
  return (0, _core.jsx)("div", {
    css:
    /*#__PURE__*/
    (0, _css2.default)((0, _objectSpread2.default)({}, theme.mode.contentNav().product, {
      '&:not(:only-child)': {
        // Setting z-index ensures ScrollHints stay below the container nav
        // &:not(:only-child) sets it only when both container and product
        // nav are rendered.
        zIndex: -1
      }
    }), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUVJIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */")
  }, (0, _core.jsx)(ScrollProvider, {
    isVisible: isVisible
  }, children));
};

var ProductNavigationPrimitive = (0, _theme.withContentTheme)(ProductNavigationPrimitiveBase);

var ProductNavigationTheme = function ProductNavigationTheme(_ref3) {
  var children = _ref3.children;
  return (0, _core.jsx)(_theme.ThemeProvider, {
    theme: function theme(oldTheme) {
      return (0, _objectSpread2.default)({
        mode: _theme.light
      }, oldTheme, {
        context: 'product'
      });
    }
  }, (0, _core.jsx)(_react.Fragment, null, children));
};

exports.ProductNavigationTheme = ProductNavigationTheme;

var ProductNavigation = function ProductNavigation(props) {
  return (0, _core.jsx)(ProductNavigationTheme, null, (0, _core.jsx)(ProductNavigationPrimitive, props));
};

exports.ProductNavigation = ProductNavigation;
var slideIn = (0, _core.keyframes)(["\n  from { transform: translateX(100%); }\n  to { transform: translateX(0); }\n"]);
/**
 * ContainerNavigation
 */

var ContainerNavigationPrimitiveBase = function ContainerNavigationPrimitiveBase(_ref4) {
  var children = _ref4.children,
      isEntering = _ref4.isEntering,
      isExiting = _ref4.isExiting,
      theme = _ref4.theme,
      isVisible = _ref4.isVisible;
  var animationName;
  if (isEntering) animationName = slideIn;
  var transform = isExiting ? 'translateX(100%)' : null;
  return (0, _core.jsx)("div", {
    css:
    /*#__PURE__*/
    (0, _core.css)((0, _objectSpread2.default)({}, theme.mode.contentNav().container, {
      animationDuration: _constants.transitionDuration,
      animationFillMode: 'forwards',
      animationTimingFunction: _constants.transitionTimingFunction,
      transitionProperty: 'boxShadow, transform',
      transitionDuration: _constants.transitionDuration,
      transitionTimingFunction: _constants.transitionTimingFunction,
      transform: transform
    }), " animation-name:", animationName, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUljIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */"))
  }, (0, _core.jsx)(ScrollProvider, {
    isVisible: isVisible
  }, children));
};

var ContainerNavigationPrimitive = (0, _theme.withContentTheme)(ContainerNavigationPrimitiveBase);

var ContainerNavigationTheme = function ContainerNavigationTheme(_ref5) {
  var children = _ref5.children;
  return (0, _core.jsx)(_theme.ThemeProvider, {
    theme: {
      mode: _theme.light,
      context: 'container'
    }
  }, (0, _core.jsx)(_react.Fragment, null, children));
};

exports.ContainerNavigationTheme = ContainerNavigationTheme;

var ContainerNavigation = function ContainerNavigation(props) {
  return (0, _core.jsx)(ContainerNavigationTheme, null, (0, _core.jsx)(ContainerNavigationPrimitive, props));
};
/**
 * ContainerOverlay
 */


exports.ContainerNavigation = ContainerNavigation;

var ContainerOverlay = function ContainerOverlay(_ref6) {
  var isVisible = _ref6.isVisible,
      onClick = _ref6.onClick,
      props = (0, _objectWithoutProperties2.default)(_ref6, ["isVisible", "onClick"]);
  return (0, _core.jsx)("div", (0, _extends2.default)({
    css:
    /*#__PURE__*/
    (0, _css2.default)({
      backgroundColor: _colors.N70A,
      cursor: isVisible ? 'pointer' : 'default',
      height: '100%',
      left: 0,
      opacity: isVisible ? 1 : 0,
      pointerEvents: isVisible ? 'all' : 'none',
      position: 'absolute',
      top: 0,
      transitionDuration: _constants.transitionDuration,
      transitionProperty: 'opacity',
      transitionTimingFunction: _constants.transitionTimingFunction,
      width: '100%',
      zIndex: 5
    }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUxJIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */"),
    onClick: onClick,
    role: "presentation"
  }, props));
};

exports.ContainerOverlay = ContainerOverlay;

var ContentNavigationWrapper = function ContentNavigationWrapper(_ref7) {
  var innerRef = _ref7.innerRef,
      disableInteraction = _ref7.disableInteraction,
      props = (0, _objectWithoutProperties2.default)(_ref7, ["innerRef", "disableInteraction"]);
  return (0, _core.jsx)("div", (0, _extends2.default)({
    ref: innerRef,
    css:
    /*#__PURE__*/
    (0, _css2.default)((0, _objectSpread2.default)({
      height: '100%',
      position: 'relative'
    }, (0, _helpers.applyDisabledProperties)(!!disableInteraction)), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK01JIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */")
  }, props));
};

exports.ContentNavigationWrapper = ContentNavigationWrapper;

var ContainerNavigationMask = function ContainerNavigationMask(_ref8) {
  var disableInteraction = _ref8.disableInteraction,
      props = (0, _objectWithoutProperties2.default)(_ref8, ["disableInteraction"]);
  return (0, _core.jsx)("div", (0, _extends2.default)({
    css:
    /*#__PURE__*/
    (0, _css2.default)((0, _objectSpread2.default)({
      display: 'flex',
      flexDirection: 'row',
      overflow: 'hidden',
      height: '100%'
    }, (0, _helpers.applyDisabledProperties)(!!disableInteraction)), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ09JIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ByZXNlbnRhdGlvbmFsL0NvbnRlbnROYXZpZ2F0aW9uL3ByaW1pdGl2ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHR5cGUgTm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBONzBBIH0gZnJvbSAnQGF0bGFza2l0L3RoZW1lL2NvbG9ycyc7XG5cbmltcG9ydCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGxpZ2h0LFxuICB3aXRoQ29udGVudFRoZW1lLFxuICBUaGVtZVByb3ZpZGVyLFxuICB0eXBlIFByb2R1Y3RUaGVtZSxcbn0gZnJvbSAnLi4vLi4vLi4vdGhlbWUnO1xuaW1wb3J0IHR5cGUgeyBSZXNpemFibGUgfSBmcm9tICcuLi9MYXlvdXRNYW5hZ2VyL3ByaW1pdGl2ZXMnO1xuaW1wb3J0IHsgYXBwbHlEaXNhYmxlZFByb3BlcnRpZXMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycyc7XG5cbmltcG9ydCB0eXBlIHtcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcyxcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZVByb3BzLFxufSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdHJlZSBzdHJ1Y3R1cmVcbiAqICAtIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKiAgLSBDb250YWluZXJOYXZpZ2F0aW9uXG4gKiAgICAtIENvbnRhaW5lck92ZXJsYXlcbiAqL1xuXG5leHBvcnQgY29uc3QgU2Nyb2xsUHJvdmlkZXJSZWYgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5jb25zdCBTY3JvbGxQcm92aWRlciA9ICh7IGlzVmlzaWJsZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gIGNvbnN0IHNjcm9sbFByb3ZpZGVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXIgdmFsdWU9e3Njcm9sbFByb3ZpZGVyUmVmfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXt7XG4gICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgZGlzcGxheTogaXNWaXNpYmxlID8gJ2ZsZXgnIDogJ25vbmUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgIG92ZXJmbG93WDogJ2hpZGRlbicsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgICByZWY9e3Njcm9sbFByb3ZpZGVyUmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIDwvU2Nyb2xsUHJvdmlkZXJSZWYuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vKipcbiAqIFByb2R1Y3ROYXZpZ2F0aW9uXG4gKi9cbnR5cGUgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBOb2RlLFxuICB0aGVtZTogUHJvZHVjdFRoZW1lLFxuICBpc1Zpc2libGU6IGJvb2xlYW4sXG59O1xuXG5jb25zdCBQcm9kdWN0TmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNWaXNpYmxlLFxuICB0aGVtZSA9IHsgbW9kZTogbGlnaHQsIGNvbnRleHQ6ICdwcm9kdWN0JyB9LFxufTogUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlUHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgLi4udGhlbWUubW9kZS5jb250ZW50TmF2KCkucHJvZHVjdCxcbiAgICAgICcmOm5vdCg6b25seS1jaGlsZCknOiB7XG4gICAgICAgIC8vIFNldHRpbmcgei1pbmRleCBlbnN1cmVzIFNjcm9sbEhpbnRzIHN0YXkgYmVsb3cgdGhlIGNvbnRhaW5lciBuYXZcbiAgICAgICAgLy8gJjpub3QoOm9ubHktY2hpbGQpIHNldHMgaXQgb25seSB3aGVuIGJvdGggY29udGFpbmVyIGFuZCBwcm9kdWN0XG4gICAgICAgIC8vIG5hdiBhcmUgcmVuZGVyZWQuXG4gICAgICAgIHpJbmRleDogLTEsXG4gICAgICB9LFxuICAgIH19XG4gID5cbiAgICA8U2Nyb2xsUHJvdmlkZXIgaXNWaXNpYmxlPXtpc1Zpc2libGV9PntjaGlsZHJlbn08L1Njcm9sbFByb3ZpZGVyPlxuICA8L2Rpdj5cbik7XG5cbmNvbnN0IFByb2R1Y3ROYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgUHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmVCYXNlLFxuKTtcblxudHlwZSBQcm9kdWN0TmF2aWdhdGlvblByb3BzID0geyBpc1Zpc2libGU6IGJvb2xlYW4sIGNoaWxkcmVuOiBOb2RlIH07XG5cbnR5cGUgQmFzZU5hdmlnYXRpb25UaGVtZSA9IHtcbiAgY2hpbGRyZW46IE5vZGUsXG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdE5hdmlnYXRpb25UaGVtZSA9ICh7IGNoaWxkcmVuIH06IEJhc2VOYXZpZ2F0aW9uVGhlbWUpID0+IChcbiAgPFRoZW1lUHJvdmlkZXJcbiAgICB0aGVtZT17b2xkVGhlbWUgPT4gKHsgbW9kZTogbGlnaHQsIC4uLm9sZFRoZW1lLCBjb250ZXh0OiAncHJvZHVjdCcgfSl9XG4gID5cbiAgICA8RnJhZ21lbnQ+e2NoaWxkcmVufTwvRnJhZ21lbnQ+XG4gIDwvVGhlbWVQcm92aWRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TmF2aWdhdGlvbiA9IChwcm9wczogUHJvZHVjdE5hdmlnYXRpb25Qcm9wcykgPT4gKFxuICA8UHJvZHVjdE5hdmlnYXRpb25UaGVtZT5cbiAgICA8UHJvZHVjdE5hdmlnYXRpb25QcmltaXRpdmUgey4uLnByb3BzfSAvPlxuICA8L1Byb2R1Y3ROYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG5jb25zdCBzbGlkZUluID0ga2V5ZnJhbWVzYFxuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gIHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG5gO1xuXG4vKipcbiAqIENvbnRhaW5lck5hdmlnYXRpb25cbiAqL1xuY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNFbnRlcmluZyxcbiAgaXNFeGl0aW5nLFxuICB0aGVtZSxcbiAgaXNWaXNpYmxlLFxufTogQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2VQcm9wcykgPT4ge1xuICBsZXQgYW5pbWF0aW9uTmFtZTtcbiAgaWYgKGlzRW50ZXJpbmcpIGFuaW1hdGlvbk5hbWUgPSBzbGlkZUluO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGlzRXhpdGluZyA/ICd0cmFuc2xhdGVYKDEwMCUpJyA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICR7e1xuICAgICAgICAuLi50aGVtZS5tb2RlLmNvbnRlbnROYXYoKS5jb250YWluZXIsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICAgICAgICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdib3hTaGFkb3csIHRyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uLFxuICAgICAgICB0cmFuc2Zvcm0sXG4gICAgICB9fVxuICAgICAgYW5pbWF0aW9uLW5hbWU6ICR7YW5pbWF0aW9uTmFtZX07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxTY3JvbGxQcm92aWRlciBpc1Zpc2libGU9e2lzVmlzaWJsZX0+e2NoaWxkcmVufTwvU2Nyb2xsUHJvdmlkZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlID0gd2l0aENvbnRlbnRUaGVtZShcbiAgQ29udGFpbmVyTmF2aWdhdGlvblByaW1pdGl2ZUJhc2UsXG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvblRoZW1lID0gKHsgY2hpbGRyZW4gfTogQmFzZU5hdmlnYXRpb25UaGVtZSkgPT4gKFxuICA8VGhlbWVQcm92aWRlciB0aGVtZT17eyBtb2RlOiBsaWdodCwgY29udGV4dDogJ2NvbnRhaW5lcicgfX0+XG4gICAgPEZyYWdtZW50PntjaGlsZHJlbn08L0ZyYWdtZW50PlxuICA8L1RoZW1lUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyTmF2aWdhdGlvbiA9IChcbiAgcHJvcHM6IENvbnRhaW5lck5hdmlnYXRpb25QcmltaXRpdmVQcm9wcyxcbikgPT4gKFxuICA8Q29udGFpbmVyTmF2aWdhdGlvblRoZW1lPlxuICAgIDxDb250YWluZXJOYXZpZ2F0aW9uUHJpbWl0aXZlIHsuLi5wcm9wc30gLz5cbiAgPC9Db250YWluZXJOYXZpZ2F0aW9uVGhlbWU+XG4pO1xuXG4vKipcbiAqIENvbnRhaW5lck92ZXJsYXlcbiAqL1xudHlwZSBDb250YWluZXJPdmVybGF5UHJvcHMgPSB7IGlzVmlzaWJsZTogYm9vbGVhbiwgb25DbGljaz86IEV2ZW50ID0+IHZvaWQgfTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lck92ZXJsYXkgPSAoe1xuICBpc1Zpc2libGUsXG4gIG9uQ2xpY2ssXG4gIC4uLnByb3BzXG59OiBDb250YWluZXJPdmVybGF5UHJvcHMpID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBONzBBLFxuICAgICAgY3Vyc29yOiBpc1Zpc2libGUgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICBvcGFjaXR5OiBpc1Zpc2libGUgPyAxIDogMCxcbiAgICAgIHBvaW50ZXJFdmVudHM6IGlzVmlzaWJsZSA/ICdhbGwnIDogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdvcGFjaXR5JyxcbiAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbixcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB6SW5kZXg6IDUsXG4gICAgfX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250ZW50TmF2aWdhdGlvbldyYXBwZXIgPSAoe1xuICBpbm5lclJlZixcbiAgZGlzYWJsZUludGVyYWN0aW9uLFxuICAuLi5wcm9wc1xufTogUmVzaXphYmxlKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e2lubmVyUmVmfVxuICAgIGNzcz17e1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJOYXZpZ2F0aW9uTWFzayA9ICh7XG4gIGRpc2FibGVJbnRlcmFjdGlvbixcbiAgLi4ucHJvcHNcbn06IHtcbiAgZGlzYWJsZUludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgW3N0cmluZ106IGFueSxcbn0pID0+IChcbiAgPGRpdlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIC4uLmFwcGx5RGlzYWJsZWRQcm9wZXJ0aWVzKCEhZGlzYWJsZUludGVyYWN0aW9uKSxcbiAgICB9fVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbik7XG4iXX0= */")
  }, props));
};

exports.ContainerNavigationMask = ContainerNavigationMask;