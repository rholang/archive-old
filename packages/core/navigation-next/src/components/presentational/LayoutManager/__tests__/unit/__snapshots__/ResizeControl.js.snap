// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResizeControlBase should not render GrabArea when \`isGrabAreaDisabled\` prop is true 1`] = `
<Outer>
  <Shadow
    direction="to left"
    isBold={false}
  />
  <div
    onMouseOver={[Function]}
  >
    <WithAnalyticsContext(WithAnalyticsEvents(Tooltip))
      content={
        <div
          css="unknown styles"
        >
          <span>
            
          </span>
          <div
            css="unknown styles"
          >
            
          </div>
        </div>
      }
      delay={600}
      hideTooltipOnClick={true}
      position="right"
    >
      <Button
        aria-expanded={true}
        aria-label="Toggle navigation"
        hasHighlight={false}
        hitAreaSize="large"
        innerRef={
          Object {
            "current": null,
          }
        }
        isVisible={false}
        onClick={[Function]}
      >
        <ChevronLeftIcon />
      </Button>
    </WithAnalyticsContext(WithAnalyticsEvents(Tooltip))>
  </div>
</Outer>
`;

exports[`ResizeControlBase should render correctly 1`] = `
<Outer>
  <Shadow
    direction="to left"
    isBold={false}
  />
  <GrabArea
    isBold={false}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    showHandle={false}
  />
  <div
    onMouseOver={[Function]}
  >
    <WithAnalyticsContext(WithAnalyticsEvents(Tooltip))
      content={
        <div
          css="unknown styles"
        >
          <span>
            
          </span>
          <div
            css="unknown styles"
          >
            
          </div>
        </div>
      }
      delay={600}
      hideTooltipOnClick={true}
      position="right"
    >
      <Button
        aria-expanded={true}
        aria-label="Toggle navigation"
        hasHighlight={false}
        hitAreaSize="large"
        innerRef={
          Object {
            "current": null,
          }
        }
        isVisible={false}
        onClick={[Function]}
      >
        <ChevronLeftIcon />
      </Button>
    </WithAnalyticsContext(WithAnalyticsEvents(Tooltip))>
  </div>
</Outer>
`;
