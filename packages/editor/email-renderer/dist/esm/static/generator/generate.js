// TODO: Move this file out of src if it is a build script
/* eslint-disable import/no-extraneous-dependencies */
import * as svgexport from 'svgexport';
import { resolve } from 'path';
import { writeFileSync, readFileSync } from 'fs';
import rimraf from 'rimraf';
import imageSources from './image-sources';
import { imageOutputType } from './constants';
var coreIconSrc = resolve(__dirname, '../svg');
var tempFolder = resolve(__dirname, './tmp');
var generatedWarning = "\n// DO NOT EDIT THIS FILE DIRECTLY!\n// This file was auto generated and may be overritten.\n// To make changes, use the generator.\n";
var exportOpts = imageSources.map(function (file) { return ({
    name: file.name,
    outputPath: resolve(tempFolder, "./" + file.name + "." + imageOutputType),
    input: resolve(coreIconSrc, file.input + ".svg"),
    output: resolve(tempFolder, "./" + file.name + "." + imageOutputType) +
        (" " + file.exportSize + " 80%"),
}); });
var createIcons = function () {
    svgexport.render(exportOpts, function () {
        createIndividualIconModules();
        var indexFileExports = exportOpts
            .map(function (icon) { return "export * from './" + icon.name + "'"; })
            .join('\n');
        var indexFileEnum = "\n      export enum IconName {\n        " + exportOpts.map(function (icon) { return icon.name + " = '" + icon.name + "',"; }).join('\n') + "\n      }";
        var indexFileIconNameType = "\n      export type IconString =\n        " + exportOpts.map(function (icon) { return "'" + icon.name + "'"; }).join(' | ') + "\n      ";
        var indexFileContents = [
            generatedWarning,
            indexFileExports,
            indexFileEnum,
            indexFileIconNameType,
        ].join('\n');
        writeFileSync(resolve(__dirname, "../icons/index.ts"), indexFileContents);
        rimraf(tempFolder, function () {
            // if (err) return console.log(err);
        });
    });
};
var createIndividualIconModules = function () {
    exportOpts.map(function (icon) {
        return writeFileSync(resolve(__dirname, "../icons/" + icon.name + ".ts"), generatedWarning + "\n      export const " + icon.name + " = '" + readFileSync(icon.outputPath).toString('base64') + "'");
    });
};
createIcons();
//# sourceMappingURL=generate.js.map