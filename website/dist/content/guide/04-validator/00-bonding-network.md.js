(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[43],{1003:function(e,n,t){"use strict";t.r(n);n["default"]={content:"\n# What are Validators\n\nValidators are agents that will run your dApp. They are interested in your application to get validation rewards out of transaction volume your dApp creating, you are interested to pick right set of validators (right shard) to get best compromise between cost of execution and security of network. The more validators are in network and the more powerful they are - the more costly will be their services, because the network provides high throughput and high level of decentralisation. The cheapest shard is a single RNode hosted by yourself, but that's a no good solution for working with important data.\n\n# Bonding to a network\n\nTo participate in the RChain proof-of-stake consensus protocol, you must stake bond on the network to become a bonded validator. Information about this process is not yet available.\n\n## Joining the RChain test net\n\nYou can join the RChain test net. Please see [RChain public testnet](https://rchain.atlassian.net/wiki/spaces/CORE/pages/678756429/RChain+public+testnet+information) information for details about the version of software and the bootstrap address.\n\n## Monitoring the Node\n\nRNode features integration with Prometheus. [These instructions](https://github.com/rchain/rchain/blob/master/docker/node/README.md) describe a method for getting started with RNode metrics collection and display using Prometheus via Docker-compose.\n\n## Visualizing the blockchain\n\nTo support debugging we have a process to collect information from the node and use it in graphviz to create a visualization of the DAG. Below are instructions for two methods for using this tool.\n\n## Visualizing the blockchain when there are >6,000 lines\n\nOnce an active network has been running for a few hours, your call to vdag will likely generate >6,000 lines of output. In this scenario, you will need to have installed the Graphviz software and use it to create a .png file. Please see https://www.graphviz.org/download/ for information about installing and running Graphviz.\n\nOnce installed use the following command to generate a .png file based on vdag output.\n\n```bash\nrnode vdag | dot -Tpng >vdag.png\n```\n\n## Creating a private blockchain\n\nYou can create your own blockchain network.\n\nPrerequisites for a private blockchain\n\n- 1 bootstrap node\n- 2 other node instances running on a network where they can communicate with each other (peers of each other).\n- Keys for the node instances (these will be required for signing and creating the bond.txt file)\n- A bond.txt file accessible by all node instances. You can either supply it, or use the system generated bonds file.\n- A Rholang file to deploy across the network.\n\nSteps to create a private blockchain\n\n- Start the bootstrap node. This is the 1 node operating in standalone mode.\n- Include the address of the bootstrap node in your run command for the peer nodes.\n",data:{title:"Bonding to a network",description:"Everything you need to know to get up and running with Atlaskit"},isEmpty:false,excerpt:""}}}]);