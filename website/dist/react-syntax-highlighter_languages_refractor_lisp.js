(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[187],{862:function(e,n,a){"use strict";e.exports=t;t.displayName="lisp";t.aliases=[];function t(e){(function(e){function n(e){return RegExp("(\\()"+e+"(?=[\\s\\)])")}function a(e){return RegExp("([\\s([])"+e+"(?=[\\s)])")}var t="[-+*/_~!@$%^=<>{}\\w]+";var r="&"+t;var s="(\\()";var i="(?=\\))";var o="(?=\\s)";var l={heading:{pattern:/;;;.*/,alias:["comment","title"]},comment:/;.*/,string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:true,inside:{argument:/[-A-Z]+(?=[.,\s])/,symbol:RegExp("`"+t+"'")}},"quoted-symbol":{pattern:RegExp("#?'"+t),alias:["variable","symbol"]},"lisp-property":{pattern:RegExp(":"+t),alias:"property"},splice:{pattern:RegExp(",@?"+t),alias:["symbol","variable"]},keyword:[{pattern:RegExp(s+"(?:(?:lexical-)?let\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)"+o),lookbehind:true},{pattern:RegExp(s+"(?:for|do|collect|return|finally|append|concat|in|by)"+o),lookbehind:true}],declare:{pattern:n("declare"),lookbehind:true,alias:"keyword"},interactive:{pattern:n("interactive"),lookbehind:true,alias:"keyword"},boolean:{pattern:a("(?:t|nil)"),lookbehind:true},number:{pattern:a("[-+]?\\d+(?:\\.\\d*)?"),lookbehind:true},defvar:{pattern:RegExp(s+"def(?:var|const|custom|group)\\s+"+t),lookbehind:true,inside:{keyword:/^def[a-z]+/,variable:RegExp(t)}},defun:{pattern:RegExp(s+"(?:cl-)?(?:defun\\*?|defmacro)\\s+"+t+"\\s+\\([\\s\\S]*?\\)"),lookbehind:true,inside:{keyword:/^(?:cl-)?def\S+/,arguments:null,function:{pattern:RegExp("(^\\s)"+t),lookbehind:true},punctuation:/[()]/}},lambda:{pattern:RegExp(s+"lambda\\s+\\((?:&?"+t+"\\s*)*\\)"),lookbehind:true,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:RegExp(s+t),lookbehind:true},punctuation:[/(['`,]?\(|[)\[\]])/,{pattern:/(\s)\.(?=\s)/,lookbehind:true}]};var p={"lisp-marker":RegExp(r),rest:{argument:{pattern:RegExp(t),alias:"variable"},varform:{pattern:RegExp(s+t+"\\s+\\S[\\s\\S]*"+i),lookbehind:true,inside:{string:l.string,boolean:l.boolean,number:l.number,symbol:l.symbol,punctuation:/[()]/}}}};var u="\\S+(?:\\s+\\S+)*";var d={pattern:RegExp(s+"[\\s\\S]*"+i),lookbehind:true,inside:{"rest-vars":{pattern:RegExp("&(?:rest|body)\\s+"+u),inside:p},"other-marker-vars":{pattern:RegExp("&(?:optional|aux)\\s+"+u),inside:p},keys:{pattern:RegExp("&key\\s+"+u+"(?:\\s+&allow-other-keys)?"),inside:p},argument:{pattern:RegExp(t),alias:"variable"},punctuation:/[()]/}};l["lambda"].inside.arguments=d;l["defun"].inside.arguments=e.util.clone(d);l["defun"].inside.arguments.inside.sublist=d;e.languages.lisp=l;e.languages.elisp=l;e.languages.emacs=l;e.languages["emacs-lisp"]=l})(e)}}}]);