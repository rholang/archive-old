(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[99,101,102],{693:function(n,t,e){"use strict";e.r(t);e.d(t,"default",function(){return f});var i=e(1);var o=e(0);var a=e.n(o);var r=e(658);var c=e(661);var s=function(n){Object(i["__extends"])(t,n);function t(){return n.call(this,"","")||this}t.prototype.countUnseenNotifications=function(){return Object(i["__awaiter"])(this,void 0,void 0,function(){return Object(i["__generator"])(this,function(n){return[2,Promise.resolve({count:5})]})})};return t}(r["NotificationLogClient"]);function f(){var n=new s;return o["createElement"](c["a"],{notificationLogProvider:Promise.resolve(n)})}},695:function(n,t){n.exports="import * as React from 'react';\n\nimport { NotificationLogClient } from '@atlaskit/notification-log-client';\n\nimport { NotificationIndicator } from '../src';\n\nclass MockNotificationLogClient extends NotificationLogClient {\n  constructor() {\n    super('', '');\n  }\n\n  public async countUnseenNotifications() {\n    return Promise.resolve({ count: 5 });\n  }\n}\n\nexport default function Example() {\n  const client = new MockNotificationLogClient();\n\n  return (\n    <NotificationIndicator notificationLogProvider={Promise.resolve(client)} />\n  );\n}\n"},755:function(n,t){n.exports={component:{kind:"object",members:[{kind:"property",key:{kind:"id",name:"Warning"},value:{kind:"any"},optional:false,leadingComments:[{type:"commentBlock",value:"extract-react-types is not being run in dev mode for speed reasons. If you need to\nsee prop types add the environment variable `FORCE_EXTRACT_REACT_TYPES`\neg:\n- `FORCE_EXTRACT_REACT_TYPES=true yarn start <packageName>`\n- `FORCE_EXTRACT_REACT_TYPES=true yarn start:<team>`",raw:"**"}],default:{kind:"string",value:"Prop types are not shown in dev mode"}}],referenceIdName:"AvatarPropTypes"}}},934:function(n,t,e){"use strict";e.r(t);var i=e(1);var o=e(0);var a=e.n(o);var r=e(180);t["default"]=Object(r["e"])(s||(s=Object(i["__makeTemplateObject"])(["\n  ","\n\n  ```NotificationIndicator``` is a React component that wraps an existing @atlaskit/badge component with\n  additional functionalities:\n  \n  * Populate its own state by fetching data through the provided notification-log-client.\n  * Sets up automatic refresh when ```refreshRate``` is specified.\n  * Disables automatic refresh when tab is inactive, unless forced.\n\n  ## Usage\n\n  ","\n\n  ","\n\n  ","\n"],["\n  ","\n\n  \\`\\`\\`NotificationIndicator\\`\\`\\` is a React component that wraps an existing @atlaskit/badge component with\n  additional functionalities:\n  \n  * Populate its own state by fetching data through the provided notification-log-client.\n  * Sets up automatic refresh when \\`\\`\\`refreshRate\\`\\`\\` is specified.\n  * Disables automatic refresh when tab is inactive, unless forced.\n\n  ## Usage\n\n  ","\n\n  ","\n\n  ","\n"])),o["createElement"](r["a"],null),Object(r["d"])(c||(c=Object(i["__makeTemplateObject"])(["import { NotificationIndicator } from '@atlaskit/notification-indicator';"],["import { NotificationIndicator } from '@atlaskit/notification-indicator';"]))),o["createElement"](r["b"],{Component:e(693).default,title:"Basic",source:e(695)}),o["createElement"](r["c"],{heading:"Props",props:e(755)}));var c,s}}]);